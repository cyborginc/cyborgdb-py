name: Test CyborgDB Python SDK

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout SDK code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Checkout cyborgdb-service repository
        uses: actions/checkout@v4
        with:
          repository: cyborginc/cyborgdb-service
          ref: main
          path: cyborgdb-service
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install cyborgdb-service from source
        run: |
          # Install the server from the cloned repository
          pip install ./cyborgdb-service
          
      - name: Install SDK dependencies
        run: |
          pip install -e .
          pip install pytest pytest-cov pytest-asyncio
          
      - name: Set up environment
        run: |
          echo "CYBORGDB_API_KEY=${{ secrets.CYBORGDB_API_KEY }}" >> $GITHUB_ENV
          echo "CYBORGDB_DB_TYPE=redis" >> $GITHUB_ENV
          echo "CYBORGDB_CONNECTION_STRING=redis://localhost:6379" >> $GITHUB_ENV
          
      - name: Start CyborgDB service
        run: |
          # Start the service in the background
          cyborgdb-service &
          # Wait for the service to be ready with a retry loop (max 30s)
          for i in {1..30}; do
            if curl -fs http://localhost:8000/health > /dev/null; then
              echo "Service is up!"
              break
            fi
            sleep 1
          done
          # Final check, fail if not up
          if ! curl -fs http://localhost:8000/health > /dev/null; then
            echo "Service failed to start after waiting 30 seconds"
            exit 1
          fi
          
      - name: Run tests
        run: |
          pytest tests/ -v --cov=cyborgdb --cov-report=term-missing
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true